global:
  oauth2:
    base-uri: /oauth2/authorization # FE가 소셜로그인 요청할 때 사용할 주소값
    # 플랫폼과 통신을 3번 정도 하는데 각 통신들이 하나의 작업을 위한 트랜잭션이라는 것을
    # 연결시키기 위해 쿠키를 사용한다.
    authorization-request-cookie-name: oauth2_auth_request
    redirect-uri-param-cookie-name: redirect_uri # 리다이렉트 어디로 할지.
    cookie-expiry-seconds: 180
    authorized-redirect-uris: # 리다이렉트용 uri
      - http://localhost:8080/fe/redirect
      - http://192.168.0.144:5233/fe/redirect
      - http://112.222.157.157:5233/fe/redirect
      - http://www.acamatch.site:5233/fe/redirect
      - http://acamatch.site:5233/fe/redirect
      - http://localhost:5173/fe/redirect
      - http://localhost:4173/fe/redirect


constant:
  academy-const:
    academy-pic-file-path: academy/%d
    business-license-file-path: businessLicense/%d
    operation-license-file-path: operationLicense/%d
    banner-pic-file-path:  banner/%d

  address-const:
    start-sep: "@"
    end-sep: "#"
    detail-address-sep: detail
    post-num-sep: post

  api-const:
    api-key: sk-svcacct-cypWCFbSA26kot7wBIEeiYgB_z1JKWr-UgnLrzROTJ-DJAt9ng5LCLFCi7K8HN9qYoNzIcT3BlbkFJmAfc2cveEr_hfhnfSSdZbbUyDSU-ZXN1tVdYDiU8junu5C90Y9-gz11upsLEmpF7qfIboA

  info-const:
    title: AcaMatch
    description: AcaMatch
    version: v2.0

  email-const:
    base-url: http://localhost:8080
    sign-up-url: api/user/sign-up
    temp-pw-url: api/user/temp-pw
    token-key: token
    pk-key: pk
    sign-up-template-name: emailTemplate
    find-pw-template-name: pwEmailTemplate
    expired-time: 900_000
    sign-up-subject: ACAMATCH 회원가입
    find-pw-subject: ACAMATCH 비밀번호 찾기
    alias: AcaMatch
    from-email: 0ca2sa0@gmail.com

  user-const:
    user-pic-file-path: /user/%d # %d는 유저 아이디 값이 들어갈 자리
    redirect-url: /log-in

  jwt-const:
    issuer: green@green.kr #토큰 발행자
    secret: bwrahkgtfjhewsghjvbhjavfhyjaeswgjbeshjabhjewbvnmbdhjtgfvrehjbmfnxdzbhjlgnb
    header-key: Authorization
    claim-key: signedUser
    bearer-format: JWT
    scheme: Bearer
    access-token-expiry: 600_000 #10분 (MS) -> 1시간으로 교체
    refresh-token-expiry: 1_296_000_000 # 15일 (MS)
    refresh-token-cookie-name: refresh-token
    refresh-token-cookie-expiry: 1_296_000 #15일 (S)

file:
  directory: D:/2024-02/download/greengram_ver3
mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: mappers/**/*.xml

spring:
  application:
    name: AcaMatch
  datasource:
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#    driver-class-name: org.mariadb.jdbc.Driver
#    url: jdbc:mariadb://localhost/acamatch_ver2
    url: jdbc:log4jdbc:mariadb://localhost/acamatch_ver2
    username: root
    password: green502
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 234430762638-2ts5p4hdsdk4ih509atrc0vf322nlgue.apps.googleusercontent.com
            client-secret: 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
            scope: # 소셜로그인 했을때 받고 싶은 데이터
              - email # -(대쉬)이거는 리스트란 뜻
              - profile
          kakao:
            client-name: Kakao
            client-id: ccd750bb2f2b905d8894df3057e3bc64
            client-secret: w2P4mrApZAzIfeK0G4g2HWO4ElfOuUy9
            client-authentication-method: client_secret_post # client-id, client-secret 쿼리스트링으로 날아가야 한다.
            authorization-grant-type: authorization_code #권한부여 유형(인기코드 -> access-token 받는 방식 선택)
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
              # baseUrl: 서버가 돌아가고 있는 host
            # action: login
            # registrationId: kakao
            # 결과: localhost:8080/login/oauth2/code/kakao
            scope: # 각 플랫폼마다 관리하는 속성명
              - profile_nickname
              - profile_image
              - account_email

          naver:
            client-name: Naver
            client-id: D5qrmc46UEI8U3w66t87
            client-secret: QbVIlUQGg9
            client-authentication-method: client_secret_post # client-id, client-secret 쿼리스트링으로 날아가야 한다.
            authorization-grant-type: authorization_code #권한부여 유형(인기코드 -> access-token 받는 방식 선택)
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
              # baseUrl: 서버가 돌아가고 있는 host
            # action: login
            # registrationId: naver
            # 결과: localhost:8080/login/oauth2/code/naver
            scope:
              - name
              - email
              - profile_image
              - nickname
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize #kakao 인증처리 URL
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header #default값이 header AccessToken 어디에 담아서 보낼지 설정(header, form, query)
            user-name-attribute: id #유일값 속성명
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize #naver 인증처리 URL
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response #유일값 속성명
#  profiles:
#   active: dev


  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 150MB
      enabled: true
  sql:
    init:
      mode: always
  # API때문에 이걸로 바꿈
  jackson:
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null
  jpa:
    show-sql: true
    open-in-view: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        globally_quoted_identifiers: true
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${constant.email-const.from-email}
    password: wotrvbcpartvbbmk
    properties:
      mail:
        smtp:
          auth: true  # SMTP 인증 사용
          starttls:
            enable: true
kakaopay:
  secret-key: DEVA2DDFFD58F667756DECD347E6F4C82F43713E
  cid: TC0ONETIME

springdoc:
  swagger-ui:
    default-model-expand-depth: 10
    display-request-duration: true
    groups-order: asc
    path: /swagger
    operations-sorter: method
    tags-sorter: alpha
  cache:
    disabled: true

excel:
  path: ${EXCEL_FILE_PATH:/home/download/image} #docker에서 excel 파일을 보기위해 추가


solapi:
  api-key: NCSEUEYMFBLPYBNV
  api-secret: 8AFKLPRTY7RTJIEFCUOLNVMF4GVIJ8RF
  sender: "01022880426"

