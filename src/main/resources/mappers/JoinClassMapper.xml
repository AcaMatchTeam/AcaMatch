<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.green.acamatch.joinClass.JoinClassMapper">
<!--    <insert id = "insJoinClass" useGeneratedKeys="true" keyProperty="joinClassId">-->
<!--        INSERT INTO joinclass-->
<!--        SET class_id = #{classId},-->
<!--        user_id = #{userId},-->
<!--        certification = #{certification},-->
<!--        registration_date = #{registrationDate}-->
<!--    </insert>-->

<!--    <select id = "existsJoinClass" parameterType="map" resultType="int">-->
<!--        SELECT COUNT(*)-->
<!--        FROM joinclass-->
<!--        WHERE class_id = #{classId} AND user_id = #{userId}-->
<!--    </select>-->

    <resultMap id="JoinClassResultMap" type="com.green.acamatch.joinClass.model.JoinClassDto">
        <id property="acaId" column="aca_id" />
        <result property="acaPics" column="aca_pics"/>
        <result property="acaPic" column="aca_pic"/>
        <result property="acaName" column="aca_name"/>
        <collection property="classList" resultMap="JoinClassInfoResultMap" />
    </resultMap>

    <resultMap id="JoinClassInfoResultMap" type="com.green.acamatch.joinClass.model.JoinClassInfoDto">
        <id property="classId" column="class_id" />
        <result property="joinClassId" column="join_class_id"/>
        <result property="className" column="class_name"/>
        <result property="startDate" column="start_date"/>
        <result property="endDate" column="end_date"/>
    </resultMap>

    <select id= "selJoinClass" resultMap="JoinClassResultMap">
    SELECT C.aca_id, A.join_class_id,
    GROUP_CONCAT(DISTINCT D.aca_pic ORDER BY D.aca_pic SEPARATOR ',') AS aca_pics,
    D.aca_pic, C.aca_name, B.class_id, B.class_name, B.start_date, B.end_date
    FROM join_class A
    INNER JOIN aca_class B
    ON A.class_id = B.class_id
    INNER JOIN academy C
    ON B.aca_id = C.aca_id
    LEFT JOIN academy_pic D
    ON C.aca_id = D.aca_id
    LEFT JOIN relationship E
    ON A.user_id = E.student_id
        WHERE (E.parent_id = #{parentId} OR #{parentId} IS NULL)
        OR (A.user_id = #{studentId} OR #{studentId} IS NULL)
        GROUP BY C.aca_id, C.aca_name, B.class_id, B.class_name, B.start_date, B.end_date, A.join_class_id
    LIMIT #{startIdx}, #{size}
    </select>

    <update id = "updJoinClass">
        UPDATE joinclass
        <set>
            <if test =" discount != null">
                discount = #{discount},
            </if>
            <if test =" certification != null">
                certification = #{certification}
            </if>
        </set>
        WHERE join_class_id = #{joinClassId}
    </update>

    <delete id = "delJoinClass">
        DELETE FROM joinclass
        WHERE join_class_id = #{joinClassId}
    </delete>
</mapper>