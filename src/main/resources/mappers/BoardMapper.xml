<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.green.acamatch.board.BoardMapper">
    <!-- list 불러오기 -->
    <select id="getBoardList" resultType="com.green.acamatch.board.model.BoardGetListDto">
        SELECT COUNT(A.board_id) OVER() AS total_count, A.board_id, B.aca_id, B.aca_name, C.user_id, A.board_name, A.created_at,
        CASE WHEN C.user_id IS NULL THEN D.name
        WHEN B.aca_id IS NULL THEN C.name
        ELSE 'UNKNOWN'
        END AS `name`
        FROM board A
        LEFT JOIN academy B
        ON A.aca_id = B.aca_id
        LEFT JOIN `user` C
        ON A.user_id = C.user_id
        LEFT JOIN `user` D
        ON B.user_id = D.user_id
        WHERE
        (B.aca_id IS NULL OR B.aca_id = #{acaId})
        AND
        (C.user_id IS NULL OR C.user_id = #{userId})
        <if test="keyword != null and keyword != '' ">
            OR A.board_name LIKE '%${keyword}%'
        </if>
        ORDER BY A.created_at DESC
        LIMIT #{startIdx}, #{size}
    </select>

    <!-- 상세보기 -->
    <select id="getBoardDetail">
        SELECT A.board_id, A.aca_id, B.aca_name, A.user_id, A.board_name, A.board_comment, A.created_at,
        CASE
        WHEN A.user_id IS NULL THEN D.name
        WHEN A.aca_id IS NULL THEN C.name
        ELSE 'UNKNOWN'
        END AS name
        FROM board A
        LEFT JOIN academy B
        ON A.aca_id = B.aca_id
        LEFT JOIN `user` C
        ON C.user_id = A.user_id
        LEFT JOIN `user` D
        ON B.user_id = D.user_id
        WHERE A.board_id = #{boardId}
    </select>
</mapper>