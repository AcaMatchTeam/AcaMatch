<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.acamatch.manager.ManagerMapper">
    <select id="getAcademyCount">
        SELECT
        DATE(A.created_at) AS register_date,
        COUNT(*) AS totalAcademyCount
        FROM academy A
        WHERE YEAR(A.created_at) = #{year}
        AND MONTH(A.created_at) = #{month}
        GROUP BY DAY(A.created_at)
        ORDER BY DAY(A.created_at);
    </select>
    <select id="getUserCount">
        SELECT DATE(U.created_at) AS register_date,
        COUNT(*) AS totalUserCount
        FROM user U
        WHERE YEAR(U.created_at) = #{year}
        AND MONTH(U.created_at) = #{month}
        GROUP BY DAY(U.created_at)
        ORDER BY DAY(U.created_at);
    </select>
    <select id="getAcademyCostCount">
        SELECT
        DATE(created_at) AS register_date,
        COUNT(*) AS academyCostCount
        FROM academy_cost
        WHERE year(created_at) = #{year}
        AND MONTH(created_at) = #{month}
        GROUP BY register_date
        ORDER BY register_date;
    </select>
    <select id="getAcademyCostByUserId">
        SELECT DISTINCT DATE(AC.created_at) AS paymentDate,
        COUNT(*) AS paymentCount
        FROM academy A
        JOIN aca_class C ON A.aca_id = C.aca_id
        JOIN book B ON A.aca_id = B.aca_id
        JOIN product P ON B.book_id = P.book_id OR C.class_id = P.class_id
        JOIN academy_cost AC ON P.product_id = AC.product_id
        WHERE YEAR(AC.created_at) = #{year}
        AND MONTH(AC.created_at) = #{month}
        AND P.product_id != 1
        AND A.user_id = #{userId}
        GROUP BY AC.cost_id
        ORDER BY paymentDate;
    </select>
    <select id="getUserCountByUserId">
        SELECT DATE(JC.registration_date) AS paymentDate,
        COUNT(*) AS paymentCount
        FROM academy A
        JOIN aca_class C ON A.aca_id = C.aca_id
        JOIN join_class JC ON C.class_id = JC.class_id
        WHERE YEAR(JC.registration_date) = #{year}
        AND MONTH(JC.registration_date) = #{month}
        AND A.user_id = #{userId}
        GROUP BY DATE(JC.registration_date)
        ORDER BY DATE(JC.registration_date);
    </select>
    <select id="GetUserInfoList">
        SELECT U.name, U.user_pic, U.email, JC.registration_date, A.aca_name, C.class_name,
        U.phone, JC.certification
        FROM join_class JC
        JOIN aca_class C ON JC.class_id = C.class_id
        JOIN academy A ON C.aca_id = A.aca_id
        JOIN user U ON JC.user_id = U.user_id
        WHERE A.user_id = #{userId}
    </select>

    <select id="getUserCostCount">
        WITH RECURSIVE date_series AS (
        -- 지난달 1일부터 시작
        SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 MONTH), '%Y-%m-01') AS register_date
        UNION ALL
        -- 하루씩 증가
        SELECT DATE_ADD(register_date, INTERVAL 1 DAY)
        FROM date_series
        WHERE <![CDATA[ register_date < DATE_FORMAT(LAST_DAY(CURDATE()), '%Y-%m-%d') ]]>
        )
        SELECT
        ds.register_date,  -- 날짜 리스트
        (SELECT COUNT(*) FROM user) AS totalUserCount  -- 현재까지 등록된 모든 유저 수
        FROM date_series ds
        LEFT JOIN user u ON DATE(u.created_at) = ds.register_date
        GROUP BY ds.register_date
        ORDER BY ds.register_date;
    </select>
</mapper>