<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.acamatch.academyCost.AcademyCostMapper">
    <select id="getInfoByTid">
        select t_id, user_id, product_id, cost_id, partner_order_id
        from academy_cost
        where t_id = #{tid}
    </select>
    <select id="getAcademyCostInfo">
        SELECT SUM(fee) AS sumFee, COUNT(cost_id) AS costCount, ((
        SELECT COUNT(X2.product_id)
        FROM academy_cost X1
        INNER JOIN product X2
        ON X2.book_id IS NOT NULL
        AND X1.product_id = X2.product_id
        ) / (
        SELECT SUM(X3.book_amount)
        FROM book X3
        )) AS saleRate
        FROM academy_cost A
        WHERE A.cost_status = 2
        AND YEAR(DATE(A.created_at)) = YEAR(CURDATE())
        AND WEEK(DATE(A.created_at), 1) = WEEK(CURDATE(), 1);
    </select>
    <select id="getBookIdByProductId">
        select book_id
        from product
        where product_id = #{productId}
    </select>
    <select id="getProductIdByBookId">
        select product_id
        from book
        where book_id = #{bookId}
    </select>
    <select id="getSettlementList">
        SELECT A.aca_id, A.aca_name, AP.aca_pic, A.address,
        SUM(AC.price) AS totalPrice, MAX(AC.`status`) AS latestStatus,
        COUNT(*) OVER() AS totalCount,
        GROUP_CONCAT(AC.cost_id ORDER BY AC.created_at DESC) AS costIds
        FROM product P
        LEFT JOIN aca_class C ON P.class_id = C.class_id
        LEFT JOIN book B ON P.book_id = B.book_id
        JOIN academy_cost AC ON P.product_id = AC.product_id
        JOIN academy A ON A.aca_id = C.aca_id
        LEFT JOIN academy_pic AP ON A.aca_id = AP.aca_id
        <where>
            <if test="status != null">
                AND AC.`status` = #{status}
            </if>
            <if test="year != null">
                AND YEAR(AC.created_at) = #{year}
            </if>
            <if test="month != null">
                AND MONTH(AC.created_at) = #{month}
            </if>
        </where>
        GROUP BY A.aca_id
        ORDER BY AC.created_at DESC
        LIMIT #{startIdx}, #{size};
    </select>
    <select id="getAcademyCostInfoByCostId">
        SELECT AC.*, U.name, P.product_name
        FROM academy_cost AC
        JOIN User U ON AC.user_id = U.user_id
        JOIN product P ON AC.product_id = P.product_id
        WHERE cost_id = #{costId}
    </select>
    <select id="getProductInfo">
        SELECT product_id, product_name, product_price, book_id, class_id
        FROM product
    </select>
</mapper>